
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/grow-me
  kafka:
    bootstrap-servers: kafka-1:9091,kafka-2:9092,kafka-3:9093
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        delivery.timeout.ms: 100000
        request.timeout.ms: 30000
        max.block.ms: 60000
        retries: 3
        acks: all
        enable.idempotence: true
        linger.ms: 5
        batch.size: 16384
        buffer.memory: 33554432
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        auto.offset.reset: earliest
        enable.auto.commit: false
      group-id: keycloak-role-service
keycloak:
  realm: ${KEYCLOAK_REALM}
  adminClientId: ${KEYCLOAK_CLIENT_ID}
  adminClientSecret: ${KEYCLOAK_CLIENT_SECRET}
  urls:
    auth: http://keycloak:8080
    token: http://keycloak:8080/realms/grow-me/protocol/openid-connect/token

jwt:
  auth:
    converter:
      resource-id: ${JWT_AUTH_RESOURCE_ID:keycloak-service-client-id}



eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka/